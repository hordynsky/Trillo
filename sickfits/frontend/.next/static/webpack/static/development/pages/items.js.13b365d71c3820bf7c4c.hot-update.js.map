{"version":3,"file":"static/webpack/static/development/pages/items.js.13b365d71c3820bf7c4c.hot-update.js","sources":["webpack:///./components/Item.js","webpack:///./lib/formatMoney.js"],"sourcesContent":["import React, { Component } from 'react';\nimport Link from 'next/link';\nimport PropTypes from 'prop-types';\nimport Title from './styles/Title';\nimport ItemStyles from './styles/ItemStyles';\nimport PriceTag from './styles/PriceTag';\nimport formatMoney from '../lib/formatMoney';\n\nclass Item extends Component {\n    render() {\n        const { item } = this.props;\n        return (\n            <ItemStyles>\n                <Title>\n                    <Link href={{\n                        pathname: 'item/',\n                        query: { \n                            id: item.id\n                        }\n                    }}>\n                       <a>{item.title}</a>\n                    </Link>\n                </Title>\n                <PriceTag>\n                    {item.price}\n                </PriceTag>\n            </ItemStyles>\n        );\n    }\n}\n\nItem.propTypes = {\n    item: PropTypes.object.isRequired\n};\n\nexport default Item;","export default function(amount) {\n  const options = {\n    style: 'currency',\n    currency: 'USD',\n    minimumFractionDigits: 2,\n  };\n  // if its a whole, dollar amount, leave off the .00\n  if (amount % 100 === 0) options.minimumFractionDigits = 0;\n  const formatter = new Intl.NumberFormat('en-US', options);\n  return formatter.format(amount / 100);\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AACA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AADA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;;;;AApBA;AACA;AAsBA;AACA;AADA;AAIA;;;;;;;;;;;;ACnCA;AAAA;AACA;AACA;AACA;AACA;AAHA;AACA;AAKA;AACA;AACA;AACA;;;;A","sourceRoot":""}