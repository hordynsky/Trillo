{"version":3,"file":"static/webpack/static/development/pages/_app.js.3c103d41af97adf7a79a.hot-update.js","sources":["webpack:///./components/Search.js"],"sourcesContent":["import React from 'react';\nimport Downshift, { resetIdCounter } from 'downshift';\nimport Router from 'next/router';\nimport { ApolloConsumer } from 'react-apollo';\nimport gql from 'graphql-tag';\nimport debounce from 'lodash.debounce';\nimport { DropDown, DropDownItem, SearchStyles } from './styles/DropDown';\n\nconst SEARCH_ITEMS_QUERY = gql`\n    query SEARCH_ITEMS_QUERY($searchTerm: String!){\n        items(where: { OR: [\n                {title_contains: $searchTerm},\n                {description_contains: $searchTerm}\n            ]\n        }){\n            id\n            image\n            title\n        }\n    }\n`;\n\nfunction routeToItem(item){\n    Router.push({\n        pathname: '/item',\n        query: {\n            id: item.id\n        }\n    })\n}\n\nclass AutoComplete extends React.Component {\n    state = {\n        items: [],\n        loading: false\n    }\n    onChange = debounce(async (e, client) => {\n        console.log('searching')\n        // Turn loading on\n        this.setState({\n            loading: true\n        })\n        // Manually query apollo client\n        const res = await client.query({\n            query: SEARCH_ITEMS_QUERY,\n            variables: {\n                searchTerm: e.target.value\n            }\n        })\n        this.setState({\n            items: res.data.items,\n            loading: false\n        })\n    }, 350);\n    render(){\n       return( \n            <SearchStyles>\n                <Downshift onChange={routeToItem} itemToString={item => ( item === null ? '' : item.title)}>\n                    {({getInputProps, getItemProps, isOpen, inputValue, highlightedIndex}) => (\n                        <div>\n                            <ApolloConsumer>\n                                {(client) => <input \n                                    {...getInputProps({\n                                        type: 'search',\n                                        placeholder: 'Search for an item',\n                                        id: 'search',\n                                        className: this.state.loading ? 'loading' : '',\n                                        onChange: e => {\n                                            e.persist();\n                                            this.onChange(e, client);\n                                        }\n                                    })}\n                                />}\n                            </ApolloConsumer>\n                            { isOpen && (\n                                <DropDown>\n                                    {this.state.items.map((item, index) => (\n                                        <DropDownItem \n                                            {...getItemProps({item})}\n                                            key={item.id} \n                                            highlighted={index === highlightedIndex}>\n                                                <img width=\"50\" src={item.image} alt={item.title}></img>\n                                                {item.title}\n                                        </DropDownItem>\n                                    ))}\n                            {!this.state.items.length && !this.state.loading && <DropDownItem>Nothing Found For {inputValue}</DropDownItem>}\n                                </DropDown>\n                            )}\n                        </div>\n                    )}\n                </Downshift>\n            </SearchStyles>\n       )\n    }\n}\n\nexport default AutoComplete;"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAaA;AACA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;;;;;;;;;;;;;;;;;;AACA;AACA;AACA;AAFA;AACA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AADA;AACA;AACA;AALA;AAAA;AAQA;AACA;AACA;AADA;AAFA;AACA;AARA;AAOA;AACA;AAKA;AACA;AACA;AAFA;AACA;AAdA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;;;;;;AAiBA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AARA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAcA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AAAA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AALA;AASA;AAAA;AAAA;AAAA;AAAA;AAAA;AA3BA;AAmCA;;;;AA9DA;AACA;AAgEA;;;;A","sourceRoot":""}